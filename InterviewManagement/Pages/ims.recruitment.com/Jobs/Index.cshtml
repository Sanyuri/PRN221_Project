@page
@using InterviewManagement.Models
@using System.Security.Claims
@model InterviewManagement.Pages.Jobs.IndexModel

@{
    ViewData["Title"] = "Index";

    var Role = User.Claims.FirstOrDefault(c => c.Type == ClaimTypes.Role)?.Value;
}

<div class="container ml-2">
    <h1>Job</h1>
    <h3>Job list</h3>
    <br />

    <form method="get" class="form-inline">
        <div class="container d-flex flex-wrap align-items-center">
            <div class="col-2 mb-2 mr-3">
                <input type="text" name="searchString" value="@ViewData["Keyword"]" placeholder="Search" class="form-control">
            </div>

            <div class="col-2 mb-2 mr-3">
                <select class="form-control" name="status" id="status">
                    <option value="">Status</option>
                    <option value="Draft" selected="@(ViewData["StatusFilter"] as string == "Draft")">Draft</option>
                    <option value="Open" selected="@(ViewData["StatusFilter"] as string == "Open")">Open</option>
                    <option value="Closed" selected="@(ViewData["StatusFilter"] as string == "Closed")">Closed</option>
                </select>
            </div>

            <div class="mb-2 mr-2">
                <button type="submit" class="btn btn-primary" id="btnSubmit">Search</button>
            </div>
        </div>
    </form>

    @if (Role != "Interviewer")
    {
        <div class="d-flex justify-content-end">
            <a class="btn btn-secondary mr-2" role="button" asp-page="Create">Add new</a>
        </div>
    }                             



    <div>
        @if (Model.Job.Count == 0)
        {
            <p>No job has been found</p>
        } else
        {
            <table class="table">
                <thead>
                    <tr>
                        <th>
                            @Html.DisplayNameFor(model => model.Job[0].JobName)
                        </th>
                        <th>
                            Required Skill
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Job[0].StartDate)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Job[0].EndDate)
                        </th>
                        <th>
                            Level
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Job[0].Status)
                        </th>
                        <th>
                            Action
                        </th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.Job)
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => item.JobName)
                            </td>
                            <td>
                                @{
                                    var skills = item.Skills.ToList();
                                    for (int i = 0; i < skills.Count; i++)
                                    {
                                        <span>@skills[i].SkillName</span>
                                        @if (i < skills.Count - 1)
                                        {
                                            <span>, </span>
                                        }
                                    }
                                }
                            </td>
                            <td>
                                @(item.StartDate.Value.ToString("dd/MM/yyyy"))
                            </td>
                            <td>
                                @(item.EndDate.Value.ToString("dd/MM/yyyy"))
                            </td>
                            <td>
                                @{
                                    var levels = item.Levels.ToList();
                                    for (int i = 0; i < levels.Count; i++)
                                    {
                                        <span>@levels[i].LevelName</span>
                                        @if (i < levels.Count - 1)
                                        {
                                            <span>, </span>    
                                        }
                                    }
                                }                              
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Status)
                            </td>
                            <td>
                                <a asp-page="./Detail" asp-route-id="@item.Id" class="btn btn-soft-primary btn-icon btn-pills details-button"><i class="uil uil-eye"></i></a>
                                @if (Role != "Interviewer")
                                {
                                    @if(item.Status != "Closed")
                                    {
                                        <a asp-page="./Edit" asp-route-id="@item.Id" class="btn btn-icon btn-pills btn-soft-warning edit-button"><i class="uil uil-pen"></i></a>
                                    }
                                    <a href="#" data-bs-toggle="modal" data-bs-target="#deleteModal" class="delete btn btn-icon btn-pills btn-soft-danger delete-button" data-jobid="@item.Id"><i class="uil uil-multiply"></i></a>
                                }                                                    
                                <input type="hidden" name="jobId" id="jobId" value="@item.Id"/>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        }
        
    </div>

    <div>
        @if (Model.Job.HasPreviousPage || Model.Job.HasNextPage)
        {
            <nav>
                <ul class="pagination">
                    <li class="page-item @(Model.Job.HasPreviousPage ? "" : "disabled")">
                        <a class="page-link" href="?pageNumber=@(Model.Job.PageIndex - 1)&sortOrder=@ViewData["CurrentSort"]&
                                                searchString=@ViewData["CurrentFilter"]&status=@ViewData["StatusFilter"]">Previous</a>
                    </li>

                    @for (int i = 1; i <= Model.Job.TotalPages; i++)
                    {
                        <li class="page-item @(i == Model.Job.PageIndex ? "active" : "")">
                            <a class="page-link" href="?pageNumber=@i&sortOrder=@ViewData["CurrentSort"]&
                                                    searchString=@ViewData["CurrentFilter"]&status=@ViewData["StatusFilter"]">@i</a>
                        </li>
                    }

                    <li class="page-item @(Model.Job.HasNextPage ? "" : "disabled")">
                        <a class="page-link" href="?pageNumber=@(Model.Job.PageIndex + 1)&sortOrder=@ViewData["CurrentSort"]&
                                                searchString=@ViewData["CurrentFilter"]&status=@ViewData["StatusFilter"]">Next</a>
                    </li>
                </ul>
            </nav>
        }
    </div>
</div>

<!-- Modal -->
<div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <form method="post" asp-page="Index" asp-page-handler="Delete">
                <div class="modal-body">
                    Are you sure you want to delete this job?
                </div>
                <div class="modal-footer">
                    <input type="submit" class="btn btn-primary" value="Yes" />
                    <input type="hidden" name="jobId" id="modalJobId" />
                    <input type="button" class="btn btn-secondary" data-bs-dismiss="modal" value="No" />
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script type="text/javascript">
        $(document).ready(function () {

            $('table .delete').on('click', function () {
                var jobId = $(this).data('jobid');
                $('#modalJobId').val(jobId);
            });
        });
   
    </script>
}

